// Quick Question #1
new Set([1, 1, 2, 2, 3, 4]);
// {1, 2, 3, 4}

// Quick Question #2
[...new Set("referee")].join("");
// "ref"

// ******************************
// `[...new Set("referee")]` creates a Set object and convert it into an array
// strings are iterable
// resulting set will contain unique char:
// `["r", "e", "f"]`
// `.join("")` creates and returns a new string by concatenating all of the elements in this array
// ******************************

// Quick Question #3
let m = new Map();
m.set([1, 2, 3], true);
m.set([1, 2, 3], false);
// {[1, 2, 3] => true, [1, 2, 3] => false}

// hasDuplicate
// Write a function called hasDuplicate which accepts an array and returns true or false if that array contains a duplicate
hasDuplicate([1, 3, 2, 1]); // true
hasDuplicate([1, 5, -1, 4]); // false

function hasDuplicate(arr) {
  const newLength = [...new Set(arr)].length;
  return !(newLength === arr.length);
}

// vowelCount
// Write a function called vowelCount which accepts a string and returns a map where the keys are numbers and the values are the count of the vowels in the string.
vowelCount("awesome"); // Map { 'a' => 1, 'e' => 2, 'o' => 1 }
vowelCount("Colt"); // Map { 'o' => 1 }

function vowelCount(str) {
  const vowels = "aeiou";
  const vowelMap = new Map();
  for (let char of str) {
    const charLower = char.toLowerCase();
    if (vowelMap.get(charLower)) {
      vowelMap.set(charLower, vowelMap.get(charLower) + 1);
    } else if (vowels.includes(charLower)) {
      vowelMap.set(charLower, 1);
    }
  }
  return vowelMap;
}
